// Generated by view binder compiler. Do not edit!
package com.lemoa.mm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lemoa.mm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCodesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnExportCsv;

  @NonNull
  public final Button btnImportCsv;

  @NonNull
  public final ListView listCodes;

  @NonNull
  public final TextView tvEmptyCodes;

  private FragmentCodesBinding(@NonNull LinearLayout rootView, @NonNull Button btnExportCsv,
      @NonNull Button btnImportCsv, @NonNull ListView listCodes, @NonNull TextView tvEmptyCodes) {
    this.rootView = rootView;
    this.btnExportCsv = btnExportCsv;
    this.btnImportCsv = btnImportCsv;
    this.listCodes = listCodes;
    this.tvEmptyCodes = tvEmptyCodes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCodesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCodesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_codes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCodesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnExportCsv;
      Button btnExportCsv = ViewBindings.findChildViewById(rootView, id);
      if (btnExportCsv == null) {
        break missingId;
      }

      id = R.id.btnImportCsv;
      Button btnImportCsv = ViewBindings.findChildViewById(rootView, id);
      if (btnImportCsv == null) {
        break missingId;
      }

      id = R.id.listCodes;
      ListView listCodes = ViewBindings.findChildViewById(rootView, id);
      if (listCodes == null) {
        break missingId;
      }

      id = R.id.tvEmptyCodes;
      TextView tvEmptyCodes = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptyCodes == null) {
        break missingId;
      }

      return new FragmentCodesBinding((LinearLayout) rootView, btnExportCsv, btnImportCsv,
          listCodes, tvEmptyCodes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
